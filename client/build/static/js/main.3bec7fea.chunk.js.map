{"version":3,"sources":["services/history.js","services/http/http.js","Admin/layout/TopMenu.js","Admin/Home/Home.js","Admin/Admin.js","common/PageNotFound/PageNotFound.js","lugarturistico/comentariosvaloracion/componets/LugarActual.jsx","lugarturistico/comentariosvaloracion/componets/Termino.jsx","lugarturistico/comentariosvaloracion/componets/PuntuacionGeneral.jsx","lugarturistico/comentariosvaloracion/componets/PuntuacionFactores.jsx","lugarturistico/comentariosvaloracion/componets/Comentario.jsx","lugarturistico/comentariosvaloracion/componets/FechaVisita.jsx","lugarturistico/comentariosvaloracion/componets/Cuestionario.jsx","lugarturistico/comentariosvaloracion/componets/Enviar.jsx","lugarturistico/comentariosvaloracion/componets/Comentarios.jsx","lugarturistico/comentariosvaloracion/ComentariosValoracion.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","BEConfig","baseURL","headers","handleError","error","response","data","status","rest","history","push","console","JSON","stringify","handleStatusCodes","request","Error","message","config","processResponse","axios","params","then","catch","TopMenu","Segment","inverted","color","className","Menu","secondary","Item","name","active","Home","state","posts","loading","Promise","all","http","url","users","usersById","lodash","keyBy","postsWithUsers","map","userId","post","user","setState","finally","this","Container","Group","id","title","body","email","company","key","Image","size","src","Content","Header","as","Meta","href","Description","Extra","Component","Admin","path","useRouteMatch","Grid","Column","exact","component","to","PageNotFound","LugarActual","wrapped","Subheader","Termino","Checkbox","label","PuntuacionGeneral","calificacion","Rating","onRate","e","rating","maxRating","defaultRating","icon","PuntuacionFactores","GridColumn","columns","GridRow","Comentario","Comment","type","placeholder","Form","reply","TextArea","FechaVisita","Cuestionario","Button","buttons","Enviar","primary","Comentarios","ComentariosValoracion","useState","setCali","textAlign","Cali","log","class","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bec7fea.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();\r\n","import axios from \"axios\";\r\nimport history from \"../history\";\r\n\r\nconst baseURL = \"/api\";\r\nconst BEConfig = {\r\n  baseURL,\r\n  headers: {},\r\n};\r\n\r\nconst handleStatusCodes = ({ data, status, ...rest }) => {\r\n  switch (status) {\r\n    case 400:\r\n      return data;\r\n    case 401:\r\n      //logout\r\n      break;\r\n    case 403:\r\n      return { error: \"forbidden\" };\r\n    case 404:\r\n      history.push(\"/404\");\r\n      return;\r\n    case 500:\r\n      console.error(`status ${status}: ${JSON.stringify(data)}`);\r\n      return data;\r\n    default:\r\n      console.error(`status ${status}: ${JSON.stringify(data)}`);\r\n      return { data, status, ...rest };\r\n  }\r\n};\r\n\r\nconst handleError = (error) => {\r\n  if (error.response) {\r\n    throw handleStatusCodes(error.response);\r\n  }\r\n  if (error.request) {\r\n    console.error(error.request);\r\n    throw new Error(\"The request was made but no response was received\");\r\n  }\r\n  console.error(\"Error\", error.message);\r\n  console.error(error.config);\r\n  throw new Error(\r\n    \"Something happened in setting up the request that triggered an Error\"\r\n  );\r\n};\r\n\r\nconst addConfiguration = (params) => ({ ...BEConfig, ...params });\r\n\r\nconst processResponse = ({ data }) => data;\r\n\r\nconst request = (config) =>\r\n  axios\r\n    .request(addConfiguration(config))\r\n    .then(processResponse)\r\n    .catch(handleError);\r\n\r\nexport { request };\r\n","import React from \"react\";\r\nimport { Segment, Menu } from \"semantic-ui-react\";\r\n\r\nfunction TopMenu() {\r\n  return (\r\n    <Segment inverted color=\"teal\" className=\"no-radius\">\r\n      <Menu inverted color=\"teal\" secondary>\r\n        <Menu.Item name=\"home\" active />\r\n      </Menu>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nexport default TopMenu;\r\n","import React, { Component } from \"react\";\r\nimport lodash from \"lodash\";\r\nimport { Segment, Item, Container } from \"semantic-ui-react\";\r\nimport { http } from \"../../services\";\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { posts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      http.request({ url: \"/users/posts\" }),\r\n      http.request({ url: \"/users/users\" }),\r\n    ])\r\n      .then(([posts, users]) => {\r\n        const usersById = lodash.keyBy(users, \"id\");\r\n        const postsWithUsers = posts.map(({ userId, ...post }) => ({\r\n          user: usersById[userId],\r\n          ...post,\r\n        }));\r\n        this.setState({ posts: postsWithUsers });\r\n      })\r\n      .catch((error) => {\r\n        //should show error, for now just alerting in console\r\n        console.error(error);\r\n      })\r\n      .finally(this.setState({ loading: false }));\r\n  }\r\n\r\n  render() {\r\n    const { posts, loading } = this.state;\r\n    return (\r\n      <Container>\r\n        <Segment loading={loading}>\r\n          <Item.Group>\r\n            {posts.map(\r\n              ({\r\n                id,\r\n                title,\r\n                body,\r\n                user: {\r\n                  name,\r\n                  email,\r\n                  company: { name: company },\r\n                },\r\n              }) => (\r\n                <Item key={id}>\r\n                  <Item.Image\r\n                    size=\"tiny\"\r\n                    src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n                  />\r\n\r\n                  <Item.Content>\r\n                    <Item.Header as=\"a\">{title}</Item.Header>\r\n                    <Item.Meta>\r\n                      {name} <br />\r\n                      <a href={`mailto:${email}`}>{email}</a>\r\n                    </Item.Meta>\r\n                    <Item.Description>{body}</Item.Description>\r\n                    <Item.Extra>Company: {company}</Item.Extra>\r\n                  </Item.Content>\r\n                </Item>\r\n              )\r\n            )}\r\n          </Item.Group>\r\n        </Segment>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { TopMenu } from \"./layout\";\r\nimport { Switch, Route, Redirect, useRouteMatch } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { Home } from \"./Home\";\r\n\r\nexport function Admin() {\r\n  let { path } = useRouteMatch();\r\n  return (\r\n    <>\r\n      <TopMenu />\r\n      <Grid>\r\n        <Grid.Column>\r\n          <Switch>\r\n            <Route exact path={path} component={Home} />\r\n            <Route exact path={`${path}/posts`} component={Home} />\r\n            <Route>\r\n              <Redirect to=\"/404\" />\r\n            </Route>\r\n          </Switch>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./PageNotFound.css\";\r\n\r\nconst PageNotFound = () => (\r\n    <div className=\"ui grid middle aligned segment grey inverted\">\r\n    <div className=\"ui column center aligned\">\r\n      <div className=\"ui inverted statistic\">\r\n        <div className=\"value\">404</div>\r\n        <div className=\"label\">Error</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default PageNotFound;\r\n","import React from 'react'\r\nimport { Header,Image } from 'semantic-ui-react'\r\nconst LugarActual = () => {\r\n    return ( \r\n        <Header as='h2'>\r\n        <Image src='./img/img1.jpg' size='small' wrapped />\r\n        <Header.Content>\r\n          Lugar Turistico Actual\r\n          <Header.Subheader>Descripcion del lugar turistico</Header.Subheader>\r\n        </Header.Content>\r\n      </Header>\r\n     );\r\n}\r\n \r\nexport default LugarActual;","import React, { Fragment } from 'react';\r\nimport { Checkbox } from 'semantic-ui-react';\r\nconst Termino = () => {\r\n    return ( \r\n        <Fragment>\r\n            <Checkbox label={<label><b>Aceptar terminos y politicas</b></label>} />\r\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Facere, in.</p>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default Termino;\r\n","import React, { Fragment,useState } from 'react'\r\nimport { Rating } from 'semantic-ui-react';\r\nconst PuntuacionGeneral = ({calificacion}) => {\r\n    \r\n    const handleRate = (e, { rating, maxRating }) =>{\r\n       calificacion(rating);\r\n    }\r\n    return (  \r\n       <Fragment>\r\n           <h3>Puntuacion general para lugar turistico</h3>\r\n           <Rating  onRate={handleRate} maxRating={5} defaultRating={0} icon='star' size='massive' />\r\n           \r\n       </Fragment>\r\n    );\r\n}\r\n \r\nexport default PuntuacionGeneral\r\n","import React, { Fragment } from 'react';\r\nimport { Rating,Grid,GridRow,GridColumn } from 'semantic-ui-react';\r\nconst PuntuacionFactores = () => {\r\n    return ( \r\n       <Fragment>\r\n            <h3>Puntuacion de factores</h3>\r\n            <div >\r\n            <GridColumn>\r\n                <Grid columns={2}>\r\n                    <GridRow>\r\n                        <h4>Beneficio</h4>\r\n                        <Rating icon='star' defaultRating={0} maxRating={5} />\r\n                    </GridRow>\r\n                </Grid>\r\n                <Grid columns={2}>\r\n                    <GridRow>\r\n                        <h4>Precio</h4>\r\n                        <Rating icon='star' defaultRating={0} maxRating={5} />\r\n                    </GridRow>\r\n                </Grid>\r\n                <Grid columns={2}>\r\n                    <GridRow>\r\n                        <h4>Ubicacion</h4>\r\n                        <Rating icon='star' defaultRating={0} maxRating={5} />\r\n                    </GridRow>\r\n                </Grid>\r\n                <Grid columns={2}>\r\n                    <GridRow>\r\n                        <h4>Calidad</h4>\r\n                        <Rating icon='star' defaultRating={0} maxRating={5} />\r\n                    </GridRow>\r\n                </Grid>\r\n            </GridColumn>\r\n            </div>\r\n       \r\n       </Fragment>\r\n  );\r\n}\r\n \r\nexport default PuntuacionFactores;","import React from 'react'\r\nimport { Comment, Form , Grid, GridColumn } from 'semantic-ui-react'\r\nconst Comentario = () => {\r\n    return ( \r\n       <GridColumn>\r\n           <h2>Comentario</h2>\r\n            <Comment.Group>\r\n                <h3>Titulo del comentario</h3>\r\n                <input type=\"text\" placeholder=\"ingrese tiutlo del comentario\"/>\r\n                <Form reply>\r\n                <Form.TextArea placeholder=\"Escribe tu comentario\"/>\r\n                </Form>\r\n            </Comment.Group>\r\n       </GridColumn>\r\n     );\r\n}\r\n \r\nexport default Comentario;","import React from 'react';\r\n\r\nconst FechaVisita = () => {\r\n    return ( \r\n        <div>\r\n            <h2>Fecha de Visita</h2>\r\n            <p>01/02/2019</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FechaVisita;","import React from 'react';\r\nimport { Button, Grid,GridRow, GridColumn } from 'semantic-ui-react'\r\n\r\nconst Cuestionario = () => {\r\n    return ( \r\n       <GridColumn>\r\n           <h2>Cuestionario(opcional)</h2>\r\n            \r\n            <Grid columns={2}>\r\n                <GridRow>\r\n                        <p>Lorem ipsum dolor sit amet?</p>\r\n                        <Button.Group buttons={['Si', 'No', 'No se']} />\r\n                </GridRow>\r\n             </Grid>\r\n             <Grid columns={2}>\r\n                <GridRow>\r\n                        <p>Lorem ipsum dolor sit amet?</p>\r\n                        <Button.Group buttons={['Si', 'No', 'No se']} />\r\n                </GridRow>\r\n             </Grid>\r\n             <Grid columns={2}>\r\n                <GridRow>\r\n                        <p>Lorem ipsum dolor sit amet?</p>\r\n                        <Button.Group buttons={['Si', 'No', 'No se']} />\r\n                </GridRow>\r\n             </Grid>\r\n             <Grid columns={2}>\r\n                <GridRow>\r\n                        <p>Lorem ipsum dolor sit amet?</p>\r\n                        <Button.Group buttons={['Si', 'No', 'No se']} />\r\n                </GridRow>\r\n             </Grid>\r\n       </GridColumn>\r\n     );\r\n}\r\n \r\nexport default Cuestionario;","import React from 'react';\r\nimport { Button,Grid } from 'semantic-ui-react'\r\nimport './css/Enviar.css'\r\nconst Enviar = () => {\r\n    return ( \r\n         <Grid.Column>\r\n               <Button primary>Enviar</Button>\r\n             <p>Tu experiencia es muy valiosa para otros viajeros ¡Muchas Gracias!</p>\r\n         </Grid.Column>\r\n     );\r\n}\r\n \r\nexport default Enviar;","import React from 'react'\r\n\r\nconst Comentarios = () => {\r\n    return ( \r\n        <h1>Aqui se mostraran los ultimos comentarios</h1>\r\n     );\r\n}\r\n \r\nexport default Comentarios;","import React,{Component,useState}from 'react'\r\nimport LugarActual from './componets/LugarActual'\r\nimport { Header} from 'semantic-ui-react'\r\nimport Termino from './componets/Termino'\r\nimport PuntuacionGeneral from './componets/PuntuacionGeneral'\r\nimport PuntuacionFactores from './componets/PuntuacionFactores'\r\nimport Comentario from './componets/Comentario'\r\nimport FechaVisita from './componets/FechaVisita'\r\nimport Cuestionario from './componets/Cuestionario'\r\nimport Enviar from './componets/Enviar'\r\nimport Comentarios from './componets/Comentarios'\r\nimport './ComentariosValoracion.css'\r\nconst ComentariosValoracion = () => {\r\n    const [Cali, setCali] = useState(0);\r\n    const calificacion =(Cali)=>{\r\n        setCali(Cali);\r\n        console.log('esto es de state',Cali);\r\n    }\r\n   \r\n    return (\r\n        <div className=\"cvpadre\">\r\n            <Header as='h1' textAlign =\"center\">Cometarios y Valoración</Header>\r\n            <LugarActual/>\r\n            <div className=\"container\">\r\n                <section className=\"preguntas\">\r\n                    <Termino/>\r\n                    <PuntuacionGeneral calificacion={calificacion}/>\r\n\r\n                    <PuntuacionFactores/>\r\n                    <Comentario/>\r\n                    <FechaVisita/>\r\n                    <Cuestionario/>\r\n                </section>\r\n                <div class=\"vertical-line\"></div>\r\n                <section className=\"cometarios\">\r\n                    <Comentarios/>\r\n                </section>\r\n               \r\n            </div>\r\n            <Enviar className=\"enviar\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComentariosValoracion\r\n","import React from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport { history } from \"./services\";\r\nimport { Admin } from \"./Admin/Admin\";\r\nimport { PageNotFound } from \"./common\";\r\nimport ComentariosValoracion from \"./lugarturistico/comentariosvaloracion/ComentariosValoracion\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/comentariosvaloracion\" component={ComentariosValoracion}/>\r\n        <Route exact path=\"/\" component={Admin} />\r\n        <Route exact path=\"/404\" component={PageNotFound} />\r\n        <Route component={PageNotFound} />\r\n       \r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}